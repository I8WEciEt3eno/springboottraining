buildscript {
	dependencies {
		classpath fileTree(includes: ['*.jar'], dir: 'lib/gradlePlugin')
	}
}

plugins {
	id 'java'
//	id 'war' // note:WARパッケージするならこれを追加
//	id 'org.springframework.boot' version '3.2.5'
//	id 'io.spring.dependency-management' version '1.1.4'
}

apply plugin: 'org.springframework.boot'

group = 'jp.shoheisawachika'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
//	implementation 'org.springframework.boot:spring-boot-starter-validation'
//	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
//	compileOnly 'org.projectlombok:lombok'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	runtimeOnly 'com.mysql:mysql-connector-j'
//	runtimeOnly 'com.h2database:h2'
//	annotationProcessor 'org.projectlombok:lombok'
//	runtimeOnly 'org.springframework.boot:spring-boot-starter-tomcat' // note:WARパッケージするならprovidedRuntime/JARならruntimeOnly
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test'
	implementation fileTree(dir: 'lib/implementation')
	compileOnly fileTree(dir: 'lib/compileOnly')
	developmentOnly fileTree(dir: 'lib/developmentOnly')
	runtimeOnly fileTree(dir: 'lib/runtimeOnly')
	annotationProcessor fileTree(dir: 'lib/annotationProcessor')
	testImplementation fileTree(dir: 'lib/testImplementation')
}

springBoot {
    buildInfo()
    bootJar {
        duplicatesStrategy = 'exclude'
    }
}

tasks.named('test') {
	useJUnitPlatform()
}

bootRun {

  jvmArgs = ['-Dspring.profiles.active=localdev']
}